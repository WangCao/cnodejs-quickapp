<!-- <import name="my-footer" src="../components/Footer"></import> -->

<template>
	<!-- 刷新组件 -->

	<!-- <my-footer now=0></my-footer> -->
	<tabs index="{{now}}" onchange="changeTab">
		<tab-content class="content-container">
			<div>
				<refresh onrefresh="refresh" refreshing="{{isRefreshing}}">
					<!-- 页面文章列表 -->
					<list class="main-page" onscrollbottom="loadMoreData">
						<block for="articleList">
							<list-item type="article" class="article-item" onclick="openAricle($item.id,$item.title)">
								<image class="avatar-icon" src="{{$item.author.avatar_url}}" onclick="clickCollect($item)"></image>
								<text class="articie-title">{{$item.title}}</text>
							</list-item>
						</block>
					</list>
				</refresh>
			</div>
			<div>
				<text>这是第二页</text>
			</div>
		</tab-content>

		<tab-bar class="footer-container">
			<!-- <div for="{{btnlist}}" onclick="routerpush($item.to, $idx)" class="btn {{now == $idx ? 'active' : ''}}">
					<image src="/images/{{now==$idx? $item.png+'_1':$item.png}}.png" />
					<text>{{$item.text}}</text>
				  </div> -->
			<div class="tab-btn">
				<image src="/images/list{{now==0?'_1':''}}.png" />
				<text style="color: {{now==0?'#80bd01':'#fff'}}">全部</text>
			</div>
			<div class="tab-btn">
				<image src="/images/my{{now==1?'_1':''}}.png" />
				<text style="color: {{now==1?'#80bd01':'#fff'}}">我的</text>
			</div>
		</tab-bar>
	</tabs>

</template>
<style>
	tabs {
		width: 100%;
		height: 100%;
	}

	.footer-container {
		height: 120px;
		background-color: #444;
	}

	.tab-btn {
		width: 200px;
		display: flex;
		flex-grow: 1;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}

	.tab-btn .icon {
		width: 44px;
		height: 44px;
	}

	.icon1 {
		background-image: url("/images/list.png")
	}

	.icon2 {
		background-image: url("/images/my.png")
	}

	.icon1-active {
		background-image: url("/images/list_1.png")
	}

	.icon2-active {
		background-image: url("/images/list_2.png")
	}

	.tab-btn text {
		color: #fff;
	}

	.active text {
		color: #80bd01
	}

	.footer-container image {
		width: 44px;
		height: 44px;
		display: flex;
	}

	.page-main {
		height: 100%;
		color: #80bd01;
	}

	refresh {
		progress-color: #80bd01;
	}

	.article-item {
		display: flex;
		width: 100%;
		height: 100px;
		font-size: 24px;
		border: 0 solid #EFEFEF;
		color: #333;
		padding: 0 20px;
		border-bottom-width: 1px;
		justify-content: flex-start;
		align-items: center;
	}

	.avatar-icon {
		display: flex;
		width: 52px;
		height: 52px;
		border-radius: 26px;
	}

	.articie-title {
		margin-left: 20px;
		lines: 1;
		text-overflow: ellipsis;
	}
</style>
<script>
	import fetch from '@system.fetch'
	import vibrator from '@system.vibrator'
	import router from '@system.router'

	export default {
		private: {
			isRefreshing: false, // 刷新组件是否正在刷新
			articleList: [], // 文章列表
			page: 0, //用于分页 
			limit: 20, // 分页限制
			hasMoreData: true, // 分页是否结束
			now: 0,
		},
		onInit() {
			this.refresh()
			this.$page.setTitleBar({ text: '全部' })
		},
		changeTab(nowIndex) {
			this.now = nowIndex.index
		},
		refresh() {
			console.log("shuaxingshuaxing")
			this.isRefreshing = true
			this.page = 0
			this.getArticle()
		},
		// 获取文章列表
		getArticle() {
			fetch.fetch({
				url: 'https://cnodejs.org/api/v1/topics',
				data: {
					page: this.page,
					limit: this.limit,
					mdrender: false
				},
				success: (data) => {
					console.info(data)
					if (data.code == '200' && data.data) {
						data = JSON.parse(data.data)
						if (this.page > 0) {
							this.articleList = this.articleList.concat(data.data)
							vibrator.vibrate({
								mode: 'short'
							})
						} else {
							console.log("运行到这里")
							this.isRefreshing = false
							this.articleList = data.data
							console.log(this.isRefreshing)
						}
						console.log(this.articleList)
					} else {
						console.info(`接口错误`)
					}
				},
				fail: function (data, code) {
					console.info('fail');
				},
				complete: function () {
					console.info('complete')
				}
			})
		},
		// 进入文章详情
		openAricle(id,title) {
			router.push({
				uri: '/Detail',
				params: {articleid: id,title: title}
			})
		},
		// 加载更多页面
		loadMoreData() {

			if (this.hasMoreData) {
				this.page++
				this.getArticle();
			}
		}
	}
</script>