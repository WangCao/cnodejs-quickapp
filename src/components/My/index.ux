<template>
  <div class="my">
    <div class="header">
      <image src="../../images/node-js.svg"></image>
      <text>全中国最专业的nodejs开发者社区</text>
    </div>
    <div if="{{islogin}}" class="login-box">
      <div class="userinfo">
        <div class="avatar">
          <image src="{{avatar_url}}"></image>
          <text>{{loginname}}</text>
        </div>
      </div>
    </div>
    <div else class="sweepcode-btn" @click="sweepcodelogin">
      <image src="../../images/saoma.svg"></image>
      <text>扫码登录</text>
    </div>
  </div>
</template>

<style lang="less">
  @import '../../Common/base.less';

  .my {
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: flex-start;
    flex-direction: column;

    .header {
      width: 100%;
      height: 140px;
      background-color: #444;
      justify-content: flex-start;
      align-items: center;

      image {
        width: 80px;
        margin-left: 20px;
      }

      text {
        margin-left: 20px;
        color: #fff;
        font-size: 30px;
      }
    }
  }

  .sweepcode-btn {
    margin-top: 400px;
    width: 400px;
    height: 120px;
    border: 6px solid @base-active-color;
    border-radius: 20px;
    justify-content: center;
    align-items: center;

    image {
      width: 80px;
      height: 80px;
    }

    text {
      font-size: 30px;
      color: @base-active-color;
      margin-left: 20px;
    }
  }

  .login-box {
    width: 100%;
    height: 200px;
    background-color: #444;
    justify-content: center;

    .userinfo {
      image {
        display: flex;
        width: 100px;
        height: 100px;
      }

      flex-direction: column;
      justify-content: center;

      text {
        display: flex;
        color: #fff;
        font-size: 36px;
      }
    }

  }
</style>

<script>
  import storage from '@system.storage'
  import barcode from '@system.barcode'
  import prompt from '@system.prompt'
  import { request, baseUrl, showLoading, hideLoading } from '../../tools'
  export default {
    data: {
      islogin: false, // 是否登录
      avatar_url: '',
      user_id: '',
      loginname: '',
      token: ''
    },
    onCreate() {
      storage.get({
        key: 'accesstoken',
        success: (data) => {
          console.log(`获取storage`)
          console.info(data)
          if (data) {
            this.islogin = true;
            showLoading('加载中', '#80bd01')
            this.getUserInfoFromAccessToken(data)
          }else {
            this.islogin = false;

          }
        },
        fail: (data, code) => {
          this.islogin = false;
        }
      })
    },
    // 扫码登录
    sweepcodelogin() {
      barcode.scan({
        success: (data) => {
          console.log(`handling success: ${data.result}`)
          this.getUserInfoFromAccessToken(data.result, false)
        },
        fail: function (data, code) {
          console.log(`handling fail, code = ${code}`)
        }
      })
    },
    // 通过token获取用户信息
    async getUserInfoFromAccessToken(code, issave = true) {
      let answer = await request(`${baseUrl}/accesstoken`, { accesstoken: code }, 'post')
      let userInfo = JSON.parse(answer);
      if (userInfo.success) {
        // 存 token
        this.avatar_url = userInfo.avatar_url;
        this.user_id = userInfo.id;
        this.loginname = userInfo.loginname;
        hideLoading();
        this.islogin = true;
        if (!issave) {
          storage.set({
            key: 'accesstoken',
            value: code,
            success: function () {
              prompt.showToast({
                message: 'token存储成功'
              })
            },
            fail: function (data, code) {
              prompt.showToast({
                message: 'token存储失败'
              })
            }
          })
        }
      }
      console.log(JSON.parse(answer))
    }
  }

</script>